# Dashboard Page
# Generated on 2025-06-18 21:36:27

# Import UI components
# let UIComponent = import("web_framework.UIComponentGenerator")

# Dashboard page definition
let DashboardPage = create page do
    
    # Page metadata
    let meta = create metadata do
        let title = "Dashboard - Ludwig App"
        let description = "A beautiful dashboard page built with Ludwig"
        let keywords = ["ludwig", "dashboard", "web app"]
    
    # Page layout
    let layout = create layout do
        let navigation = UIComponent.navigation({
            "brand": "Ludwig App",
            "items": [
                {"name": "Home", "href": "/"},
                {"name": "About", "href": "/about"},
                {"name": "Contact", "href": "/contact"}
            ]
        })
        
        let hero = UIComponent.hero({
            "title": "Welcome to Dashboard",
            "subtitle": "Built with Ludwig, TailwindCSS, and shadcn/ui",
            "cta_text": "Get Started",
            "cta_link": "/dashboard"
        })
        
        let content_section = create content do
            let cards = [
                UIComponent.card({
                    "title": "Feature 1",
                    "content": "Description of the first feature"
                }),
                UIComponent.card({
                    "title": "Feature 2", 
                    "content": "Description of the second feature"
                }),
                UIComponent.card({
                    "title": "Feature 3",
                    "content": "Description of the third feature"
                })
            ]
            
            # return grid_layout(cards, columns=3)
        
        let contact_form = UIComponent.form({
            "title": "Contact Us",
            "fields": [
                {"type": "text", "name": "name", "label": "Your Name", "required": true},
                {"type": "email", "name": "email", "label": "Email Address", "required": true},
                {"type": "textarea", "name": "message", "label": "Message", "required": true}
            ],
            "submit_text": "Send Message"
        })
        
        let footer = create footer do
            # Footer content
            let footer_content = "<p>&copy; 2025 Ludwig App. All rights reserved.</p>"
    
    # Page controller
    let controller = create controller do
        let index = create action do
            # Handle GET request
            # return render("dashboard", {
            #     "meta": meta,
            #     "navigation": navigation,
            #     "hero": hero,
            #     "content": content_section,
            #     "form": contact_form,
            #     "footer": footer
            # })
        
        let submit = create action do
            # Handle form submission
            # let form_data = get_request_data()
            
            # Validation rules
            let rules = {
                "name": ["required", "string", "min:2"],
                "email": ["required", "email"],
                "message": ["required", "string", "min:10"]
            }
            
            # let validation_result = validate(form_data, rules)
            
            # if validation_result.is_valid() do
            #     # Process form data
            #     send_contact_email(form_data)
            #     return redirect("/dashboard").with_success("Message sent successfully!")
            # else do
            #     return redirect_back().with_errors(validation_result.errors())
    
    # Page routes
    let routes = create routes do
        let get_route = route("GET", "/dashboard", "DashboardPage.controller.index")
        let post_route = route("POST", "/dashboard/contact", "DashboardPage.controller.submit")
    
    # Page styles (TailwindCSS classes)
    let styles = create styles do
        let container = "mx-auto max-w-7xl px-4 sm:px-6 lg:px-8"
        let section_spacing = "py-12 sm:py-16 lg:py-20"
        let grid_3_cols = "grid grid-cols-1 gap-6 sm:grid-cols-2 lg:grid-cols-3"
        let card_hover = "transform transition-transform duration-200 hover:scale-105"

# Export page
# export DashboardPage

# Register page routes
# app.register_routes(DashboardPage.routes)

# HTML Template (save as views/dashboard.html)
let html_template = """
<div class="min-h-screen bg-gradient-to-br from-blue-50 to-indigo-100">
    {{ navigation }}
    
    {{ hero }}
    
    <section class="py-20">
        <div class="mx-auto max-w-7xl px-4 sm:px-6 lg:px-8">
            <div class="text-center mb-16">
                <h2 class="text-3xl font-bold text-gray-900 sm:text-4xl">
                    Dashboard Features
                </h2>
                <p class="mt-4 text-lg text-gray-600">
                    Discover what makes our platform special
                </p>
            </div>
            
            <div class="grid grid-cols-1 gap-8 sm:grid-cols-2 lg:grid-cols-3">
                {{ content }}
            </div>
        </div>
    </section>
    
    <section class="py-20 bg-white">
        <div class="mx-auto max-w-7xl px-4 sm:px-6 lg:px-8">
            <div class="mx-auto max-w-2xl">
                {{ form }}
            </div>
        </div>
    </section>
    
    {{ footer }}
</div>
"""
